{"version":3,"sources":["assets/img/logo.png","components/Logo/Logo.js","components/NavBar/NavBar.js","components/RecipeList/RecipeList.js","components/RecipeDetails/RecipeDetails.js","components/BackDrop/BackDrop.js","components/Modal/Modal.js","components/Form/AddRecipeForm.js","components/Form/EditRecipeForm.js","data/dummy-data.js","containers/Recipe.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","props","className","style","height","src","logo","alt","NavBar","RecipeList","recipeList","recipes","map","rec","key","name","onClick","viewRecipe","addRecipe","RecipeDetails","recipe","ingredients","ingredient","steps","step","removeRecipe","editRecipe","BackDrop","show","clicked","Modal","cancel","transform","children","AddRecipeForm","onSubmit","saveRecipe","type","onChange","addRecipeName","ingredientInput","fld","i","addIngredient","addIngredientField","ingredientStepInput","addStep","addStepField","EditRecipeForm","value","console","log","defaultValue","rows","Recipe","savedRecipe","JSON","parse","window","localStorage","getItem","useState","concat","setRecipe","activeRecipe","setActiveRecipe","setAddRecipe","setEditRecipe","handleToggleAddRecipe","handleToggleEditRecipe","setIngredientInput","setIngredientStepInput","setIngredient","setStep","recipeName","setRecipeName","useEffect","addedRecipes","filter","indexOf","setItem","stringify","_recipe","recipeIndex","findIndex","splice","e","preventDefault","newRecipe","Object","values","target","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20772973.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.45853384.png\";","import React from \"react\";\nimport logo from \"../../assets/img/logo.png\";\nimport \"./Logo.css\";\n\nconst Logo = (props) => (\n  <div className=\"logo\" style={{ height: props.height }}>\n    <img src={logo} alt=\"\" />\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport \"./NavBar.css\";\nimport Logo from \"../Logo/Logo\";\n\nconst NavBar = () => {\n  return (\n    <header className=\"navbar\">\n      <Logo height=\"90%\" />\n    </header>\n  );\n};\nexport default NavBar;\n","import React from \"react\";\nimport \"./RecipeList.css\";\n\nconst RecipeList = (props) => {\n  const { recipes } = props;\n  const recipeList = recipes.map((rec) => (\n    <li\n      key={rec.name}\n      onClick={() => {\n        props.viewRecipe(rec.name);\n      }}\n    >\n      {rec.name}\n    </li>\n  ));\n\n  return (\n    <>\n      <div className=\"side-drawer\">\n        <button className=\"btn\" onClick={props.addRecipe}>\n          Add recipe\n        </button>\n\n        <hr />\n        <ul className=\"recipe-list\">{recipeList}</ul>\n      </div>\n    </>\n  );\n};\n\nexport default RecipeList;\n","import React from \"react\";\nimport \"./RecipeDetails.css\";\n\nconst RecipeDetails = props => {\n  return (\n    <div className=\"recipe-details\">\n      {props.recipe ? (\n        <div className=\"recipe-box\">\n          <h3>Ingredients</h3>\n          {props.recipe.ingredients.map((ingredient) => (\n            <li key={ingredient}>{ingredient}</li>\n          ))}\n          <h3>Steps</h3>\n          {props.recipe.steps.map((step) => (\n            <li key={step}>{step}</li>\n          ))}\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => props.removeRecipe(props.recipe.name)}\n          >\n            Delete\n          </button>\n          <button\n            className=\"btn btn-warn\"\n            onClick={props.editRecipe}\n          >\n            Edit\n          </button>\n        </div>\n      ) : (\n        <h3>Oops! no recipe found please add recipe</h3>\n      )}\n    </div>\n  );\n};\n\nexport default RecipeDetails;\n","import React from \"react\";\nimport \"./BackDrop.css\";\n\nconst BackDrop = (props) =>\n  props.show ? <div className=\"backdrop\" onClick={props.clicked}></div> : null;\n\nexport default BackDrop;\n","import React from \"react\";\nimport \"./Modal.css\";\nimport BackDrop from \"../BackDrop/BackDrop\";\n\nconst Modal = (props) => {\n  return (\n    <>\n      <BackDrop show={props.show} clicked={props.cancel} />\n      <div\n        className=\"modal\"\n        style={{\n          transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n        }}\n      >\n        {props.children}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nconst AddRecipeForm = (props) => {\n  return (\n    <form onSubmit={props.saveRecipe}>\n      <h5>Name</h5>\n      <input type=\"text\" name=\"recipe-name\" onChange={props.addRecipeName} />\n      <div>\n        <h5>Ingredients</h5>\n        {props.ingredientInput.map((fld, i) => (\n          <input\n            onChange={props.addIngredient}\n            name={fld.name + i}\n            key={i}\n            className={fld.className}\n            type={fld.type}\n          />\n        ))}\n\n        <button className=\"btn\" onClick={props.addIngredientField}>\n          Add\n        </button>\n      </div>\n\n      <div>\n        <h5>Steps</h5>\n        {props.ingredientStepInput.map((fld, i) => (\n          <input\n            onChange={props.addStep}\n            name={fld.name + i}\n            key={i}\n            className={fld.className}\n            type={fld.type}\n          />\n        ))}\n\n        <button className=\"btn\" onClick={props.addStepField}>\n          Add\n        </button>\n      </div>\n\n      <button className=\"btn\">Save recipe</button>\n    </form>\n  );\n};\n\nexport default AddRecipeForm;\n","import React from \"react\";\n\nconst EditRecipeForm = (props) => {\n  const { editRecipe, recipe } = props;\n  return (\n    <form onSubmit={editRecipe}>\n      <h5>Name</h5>\n      <input type=\"text\" name=\"recipe-name\" value={recipe.name} />\n      <div>\n        <h5>Ingredients</h5>\n        {recipe.ingredients.map((ingredient, i) => (\n          <input\n            onChange={() => console.log(\"a\")}\n            name={ingredient + i}\n            key={ingredient + i}\n            className=\"txt-input-lg\"\n            type=\"text\"\n            value={ingredient}\n          />\n        ))}\n      </div>\n\n      <div>\n        <h5>Steps</h5>\n        {recipe.steps.map((step, i) => (\n          <textarea\n            defaultValue={step}\n            name={step + i}\n            key={step + i}\n            className=\"txt-input-lg\"\n            rows=\"2\"\n          >\n            {/* {step} */}\n          </textarea>\n        ))}\n      </div>\n\n      <button className=\"btn\">Save</button>\n    </form>\n  );\n};\n\nexport default EditRecipeForm;\n","export const recipes = [\n  {\n    name: \"Pancakes\",\n    ingredients: [\n      \"1 1/2 Cups all-purpose Flour\",\n      \"3 1/2 Teaspoons Baking Powder\",\n      \"1 Teaspoon Salt\",\n      \"1 Tablespoon White Sugar\",\n      \"1 1/4 cups Milk\",\n      \"1 Egg\",\n      \"3 Tablespoons Butter, melted\",\n    ],\n    steps: [\n      \"In a large bowl, sift together the flour, baking powder, salt and sugar.\",\n      \"Make a well in the center and pour in the milk, egg and melted butter; mix until smooth.\",\n      \"Heat a lightly oiled griddle or frying pan over medium high heat.\",\n      \"Pour or scoop the batter onto the griddle, using approximately 1/4 cup for each pancake. Brown on both sides and serve hot.\",\n    ],\n  },\n  {\n    name: \"Spaghetti with Tomato Sauce\",\n    ingredients: [\n      \"4 Tomatoes\",\n      \"1 Tablespoon of Olive Oil\",\n      \"1 Onion\",\n      \"250g Spaghetti\",\n      \"Spices\",\n      \"Cheese (optional)\",\n    ],\n    steps: [\n      \"Cut the tomatoes and the onion into small pieces.\",\n      \"Boil some water - add salt to it once it boils.\",\n      \"Put the spaghetti into the boiling water - they should be done in about 10 to 12 minutes.\",\n      \"In the meantime, heaten up some olive oil and add the cut onion.\",\n      \"After 2 minutes, add the tomato pieces, salt, pepper and your other spices.\",\n      \"The sauce will be done once the spaghetti are.\",\n      \"Feel free to add some cheese on top of the finished dish.\",\n    ],\n  },\n  {\n    name: \"Toast Hawaii\",\n    ingredients: [\n      \"1 Slice White Bread\",\n      \"1 Slice Ham\",\n      \"1 Slice Pineapple\",\n      \"1-2 Slices of Cheese\",\n      \"Butter\",\n    ],\n    steps: [\n      \"Butter one side of the white bread\",\n      \"Layer ham, the pineapple and cheese on the white bread\",\n      \"Bake the toast for round about 10 minutes in the oven at 200°C\",\n    ],\n  },\n  {\n    name: \"Classic Hamburger\",\n    ingredients: [\n      \"300g Cattle Hack\",\n      \"1 Tomato\",\n      \"1 Cucumber\",\n      \"1 Onion\",\n      \"Ketchup\",\n      \"2 Burger Buns\",\n    ],\n    steps: [\n      \"Form 2 patties\",\n      \"Fry the patties for c. 4 minutes on each side\",\n      \"Quickly fry the buns for c. 1 minute on each side\",\n      \"Bruch buns with ketchup\",\n      \"Serve burger with tomato, cucumber and onion\",\n    ],\n  },\n  {\n    name: \"Salad with Smoked Salmon\",\n    ingredients: [\n      \"Arugula\",\n      \"Lamb's Lettuce\",\n      \"Parsley\",\n      \"Fennel\",\n      \"200g Smoked Salmon\",\n      \"Mustard\",\n      \"Balsamic Vinegar\",\n      \"Olive Oil\",\n      \"Salt and Pepper\",\n    ],\n    steps: [\n      \"Wash and cut salad and herbs\",\n      \"Dice the salmon\",\n      \"Process mustard, vinegar and olive oil into a dessing\",\n      \"Prepare the salad\",\n      \"Add salmon cubes and dressing\",\n    ],\n  },\n  {\n    name: \"Delicious Orange Mousse\",\n    ingredients: [\n      \"4 Sheets of Gelatine\",\n      \"150ml Orange Juice\",\n      \"80g Sugar\",\n      \"300g Yoghurt\",\n      \"200g Cream\",\n      \"Orange Peel\",\n    ],\n    steps: [\n      \"Dissolve gelatine in pot\",\n      \"Add orange juice and sugar\",\n      \"Take pot off the stove\",\n      \"Add 2 tablespoons of yoghurt\",\n      \"Stir gelatin under remaining yoghurt\",\n      \"Cool everything down in the refrigerator\",\n      \"Whip the cream and lift it under die orange mass\",\n      \"Cool down again for at least 4 hours\",\n      \"Serve with orange peel\",\n    ],\n  },\n  {\n    name: \"Asparagus Salad with Cherry Tomatoes\",\n    ingredients: [\n      \"White and Green Asparagus\",\n      \"30g Pine Nuts\",\n      \"300g Cherry Tomatoes\",\n      \"Salad\",\n      \"Salt, Pepper and Olive Oil\",\n    ],\n    steps: [\n      \"Wash, peel and cut the asparagus\",\n      \"Cook in salted water\",\n      \"Salt and pepper the asparagus\",\n      \"Roast the pine nuts\",\n      \"Halve the tomatoes\",\n      \"Mix with asparagus, salad and dressing\",\n      \"Serve with Baguette\",\n    ],\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport \"./Recipe.css\";\nimport RecipeList from \"../components/RecipeList/RecipeList\";\nimport RecipeDetails from \"../components/RecipeDetails/RecipeDetails\";\nimport Modal from \"../components/Modal/Modal\";\nimport AddRecipeForm from \"../components/Form/AddRecipeForm\";\nimport EditRecipeForm from \"../components/Form/EditRecipeForm\";\nimport { recipes } from \"../data/dummy-data\";\n\nconst Recipe = () => {\n  const savedRecipe = JSON.parse(window.localStorage.getItem(\"saved-recipes\"));\n\n  const [recipe, setRecipe] = useState(\n    savedRecipe !== null ? recipes.concat(savedRecipe) : recipes\n  );\n  const [activeRecipe, setActiveRecipe] = useState(recipe[0]);\n  const [addRecipe, setAddRecipe] = useState(false);\n  const [editRecipe, setEditRecipe] = useState(false);\n\n  const handleChangeActiveRecipe = (name) => {\n    const _recipe = recipe.filter((rec) => rec.name === name);\n    setActiveRecipe(..._recipe);\n  };\n\n  const handleRemoveRecipe = (name) => {\n    const recipeIndex = recipe.findIndex((rec) => rec.name === name);\n    recipe.splice(recipeIndex, 1);\n    if (recipe) setActiveRecipe(recipe[0]);\n  };\n\n  const handleToggleAddRecipe = () => {\n    setAddRecipe(!addRecipe);\n  };\n\n  const handleToggleEditRecipe = () => {\n    setEditRecipe(!editRecipe);\n  };\n\n\n  const [ingredientInput, setIngredientInput] = useState([\n    {\n      type: \"text\",\n      className: \"txt-input\",\n      name: \"ingredient\",\n    },\n  ]);\n\n  const handleAddIngredientField = (e) => {\n    e.preventDefault();\n    setIngredientInput([\n      ...ingredientInput,\n      {\n        type: \"text\",\n        className: \"txt-input\",\n        name: \"ingredient\",\n      },\n    ]);\n  };\n\n  const [ingredientStepInput, setIngredientStepInput] = useState([\n    {\n      type: \"text\",\n      className: \"txt-input\",\n      name: \"step\",\n    },\n  ]);\n\n  const handleAddIngredientStepField = (e) => {\n    e.preventDefault();\n    setIngredientStepInput([\n      ...ingredientStepInput,\n      {\n        type: \"text\",\n        className: \"txt-input\",\n        name: \"step\",\n      },\n    ]);\n  };\n\n  const [ingredient, setIngredient] = useState({});\n\n  const handleAddIngredient = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    ingredient[name] = value;\n    setIngredient({ ...ingredient });\n  };\n\n  const [step, setStep] = useState({});\n  const handleAddStep = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    step[name] = value;\n    setStep({ ...step });\n  };\n\n  const [recipeName, setRecipeName] = useState(\"\");\n  const handleAddRecipeName = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    setRecipeName(value);\n  };\n  const handleAddRecipe = (e) => {\n    e.preventDefault();\n\n    const newRecipe = {\n      name: recipeName,\n      ingredients: Object.values(ingredient),\n      steps: Object.values(step),\n    };\n    setRecipe([...recipe, newRecipe]);\n    setAddRecipe(!addRecipe);\n  };\n\n  const handleEditRecipe = (e) => {\n    e.preventDefault();\n    console.log(e.target);\n    // const newRecipe = {\n    //   name: recipeName,\n    //   ingredients: Object.values(ingredient),\n    //   steps: Object.values(step),\n    // };\n    // setRecipe([...recipe, newRecipe]);\n    // setAddRecipe(!addRecipe);\n  };\n\n  useEffect(() => {\n    const addedRecipes = recipe.filter((rec) => recipes.indexOf(rec) === -1);\n    window.localStorage.setItem(\"saved-recipes\", JSON.stringify(addedRecipes));\n  }, [recipe]);\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"content\">\n        <RecipeList\n          addRecipe={handleToggleAddRecipe}\n          viewRecipe={handleChangeActiveRecipe}\n          recipes={recipe}\n        />\n        <RecipeDetails\n          removeRecipe={handleRemoveRecipe}\n          recipe={activeRecipe}\n          editRecipe={handleToggleEditRecipe}\n        />\n\n        <Modal show={addRecipe} cancel={handleToggleAddRecipe}>\n          <AddRecipeForm\n            ingredientInput={ingredientInput}\n            ingredientStepInput={ingredientStepInput}\n            addIngredientField={handleAddIngredientField}\n            addStepField={handleAddIngredientStepField}\n            saveRecipe={handleAddRecipe}\n            addIngredient={handleAddIngredient}\n            addStep={handleAddStep}\n            addRecipeName={handleAddRecipeName}\n          />\n        </Modal>\n        <Modal show={editRecipe} cancel={handleToggleEditRecipe}>\n          <EditRecipeForm            \n            editRecipe={handleEditRecipe}\n            recipe={activeRecipe}\n          />\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport Recipe from \"./containers/Recipe\";\n\nfunction App() {\n  return <Recipe />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport 'react-app-polyfill/stable';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}